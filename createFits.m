function [fitresult, gof] = createFits(t, data_v)
%CREATEFITS1(T,DATA_V)
%  Create fits.
%
%  Data for 'fit_fourier_8' fit:
%      X Input : t
%      Y Output: data_v
%  Data for 'gaussian_8' fit:
%      X Input : t
%      Y Output: data_v
%  Data for 'polynomial_8' fit:
%      X Input : t
%      Y Output: data_v
%  Data for 'spline_smooth' fit:
%      X Input : t
%      Y Output: data_v
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 21-Sep-2020 12:03:36

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 4, 1 );
gof = struct( 'sse', cell( 4, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'fit_fourier_8'.
[xData, yData] = prepareCurveData( t, data_v );

% Set up fittype and options.
ft = fittype( 'fourier8' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2.88882083088717];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'fit_fourier_8' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'data_v vs. t', 'fit_fourier_8', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'data_v', 'Interpreter', 'none' );
grid on

%% Fit: 'gaussian_8'.
[xData, yData] = prepareCurveData( t, data_v );

% Set up fittype and options.
ft = fittype( 'gauss8' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [-Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0];
opts.StartPoint = [881.456 0.558854166666667 0.0356367585576856 832.286 0.196354166666667 0.0343901189901053 811.147812136041 0.478298611111111 0.0312180641905351 789.500282095247 0.397743055555556 0.0306584288377043 778.119184969746 0.327256944444444 0.0243722863052627 759.3312681461 0.271875 0.0254780758016172 724.232759045837 0.130902777777778 0.0336245001405377 676.30790391496 0.619270833333333 0.0334142503138022];

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'gaussian_8' );
h = plot( fitresult{2}, xData, yData );
legend( h, 'data_v vs. t', 'gaussian_8', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'data_v', 'Interpreter', 'none' );
grid on

%% Fit: 'polynomial_8'.
[xData, yData] = prepareCurveData( t, data_v );

% Set up fittype and options.
ft = fittype( 'poly8' );

% Fit model to data.
[fitresult{3}, gof(3)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'polynomial_8' );
h = plot( fitresult{3}, xData, yData );
legend( h, 'data_v vs. t', 'polynomial_8', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'data_v', 'Interpreter', 'none' );
grid on

%% Fit: 'spline_smooth'.
[xData, yData] = prepareCurveData( t, data_v );

% Set up fittype and options.
ft = fittype( 'smoothingspline' );

% Fit model to data.
[fitresult{4}, gof(4)] = fit( xData, yData, ft, 'Normalize', 'on' );

% Plot fit with data.
figure( 'Name', 'spline_smooth' );
h = plot( fitresult{4}, xData, yData );
legend( h, 'data_v vs. t', 'spline_smooth', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'data_v', 'Interpreter', 'none' );
grid on


